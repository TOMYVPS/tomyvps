[
    {
        "name": "PERSONAL AR1🇦🇷",
        "description": "PREPAGO Y ABONO VELOCIDAD Y PING DE JUEGO",
        "mode": "SSH_DIRECT",
        "tls_version": "TLSv1.2",
        "sorter": 1,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "POST / HTTP/1.1[crlf]Host: emailmarketing.personal.com.ar[crlf]Expect: 100-continue[lf][lf][split][lf][lf]PEER / HTTP/1.1[lf]Host: mio.tomyvps.website [lf]Expect: 100-continue[lf]Connection: Upgrade[lf]Upgrade: websocket[lf]User-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)[lf][lf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "1.1.1.1",
            "dns2": "1.0.0.1"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": null,
            "port": null
        },
        "server": {
            "host": "emailmarketing.personal.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL AR2🇦🇷",
        "description": "G-CLOUD TAMBIÉN CONGELA MEGAS",
        "mode": "SSL_PROXY",
        "tls_version": "TLSv1.2",
        "sorter": 2,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "GET /app115 HTTP/1.1\nHost: [rotate=e-14857056919.southamerica-east1.run.app;e-211452790298.southamerica-east1.run.app;e-312982970325.southamerica-east1.run.app;e-787170501815.southamerica-east1.run.app;e-1040039040159.southamerica-east1.run.app;proxy-e-102814795416.southamerica-east1.run.app;random=e-1040039040159.southamerica-east1.run.app;proxy-e-102814795416.southamerica-east1.run.app;proxy-e-201863786916.southamerica-east1.run.app]\nConnection: Upgrade\nUpgrade: websocket\nUser-Agent: Googlebot/2.1 (+http://www.google.com/bot.html)[crlf][crlf]",
            "sni": "Misconsumos.page.link"
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "1.1.1.1",
            "dns2": "0.0.0.0"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": "misconsumos.page.link",
            "port": 443
        },
        "server": {
            "host": "misconsumos.page.link",
            "port": 443
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL AR3🇦🇷",
        "description": "CLOUDFRONT",
        "mode": "SSH_PROXY",
        "tls_version": "TLSv1.2",
        "sorter": 3,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "GET / HTTP/1.1[crlf]Host: [host][crlf][crlf]\n[crlf][crlf][instant_split][crlf][crlf]\nX / HTTP/1.2[crlf]Host: [host][crlf][lf][crlf]GET /vpnpre1 HTTP/1.1[crlf]Host:[rotate=front5.cofilde.fun;front4.cofilde.fun;front6.cofilde.fun][crlf]Upgrade: websocket[crlf]Connection: >Upgrade[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": "ayudaysoporte.personal.com.ar",
            "port": 80
        },
        "server": {
            "host": "Keyrecd.telecom.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL AR4🇦🇷",
        "description": "CLOUDFRONT SEGUNDA OPCIÓN",
        "mode": "SSH_DIRECT",
        "tls_version": "TLSv1.2",
        "sorter": 4,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "COPY / HTTP/1.3[crlf]Host: [host][crlf][crlf]\n[lf][lf][instant_split][lf][lf]\nX / HTTP/1.2[crlf]Host: [host][crlf][lf][crlf]GET /vpnpre1 HTTP/1.1[crlf]Host:[rotate=front5.cofilde.fun;front4.cofilde.fun;front6.cofilde.fun][crlf]Upgrade: websocket[crlf]Connection: Upgrade[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "1.1.1.1",
            "dns2": "0.0.0.0"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": null,
            "port": null
        },
        "server": {
            "host": "keyrecd.telecom.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL AR5🇦🇷",
        "description": "FULL VELOCIDAD Y ESTABILIDAD",
        "mode": "SSH_DIRECT",
        "tls_version": "TLSv1.2",
        "sorter": 5,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "HEAD /UNLINK/CHECKOUT HTTP/1.2[cr]\nHost: emailmarketing.personal.com.ar[crlf]\n[split]\nREBORT /NOTIFY HTTP/1.4\nHost: mio.tomyvps.website \nUpgrade: websocket[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": null,
            "port": null
        },
        "server": {
            "host": "emailmarketing.personal.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "http://186.148.224.94:2052",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL OPCION 2🇦🇷",
        "description": "",
        "mode": "SSH_DIRECT",
        "tls_version": "TLSv1.2",
        "sorter": 6,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "HEAD / HTTP/1.2[crlf]Host: emailmarketing.personal.com.ar[crlf]Expect: 100-continue[crlf][crlf][split][crlf][crlf]CF-RAY / HTTP/1.1[crlf]Host: mio.tomyvps.website[crlf]Upgrade: Websocket[]Referer: close[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": null,
            "port": null
        },
        "server": {
            "host": "emailmarketing.personal.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL OPCIÓN 3🇦🇷🇦🇷",
        "description": "MEJOR ESTABILIDAD",
        "mode": "SSH_PROXY",
        "tls_version": "TLSv1.2",
        "sorter": 7,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "ACL / HTTP/1.2\nHost: emailmarketing.personal.com.ar[crlf][crlf]\n[crlf][split][crlf]\nMAXPATCH / HTTP/1.4\nHost: mio.tomyvps.website \nExpect: 100-Continue\nUser-Agent: Go-http-client/1.1[crlf]Proxy-Connection: Keep-Alive[crlf]Upgrade: websocket[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": "emailmarketing.personal.com.ar",
            "port": 80
        },
        "server": {
            "host": "emailmarketing.personal.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "PERSONAL 8🇦🇷🇦🇷",
        "description": "🇦🇷🇦🇷",
        "mode": "SSH_PROXY",
        "tls_version": "TLSv1.2",
        "sorter": 8,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "GET / HTTP/1.2[crlf]Host: renxo.juegos.personal.com.ar[crlf]Expect: 100-continue[crlf][crlf][split][crlf][crlf]CF-RAY / HTTP/1.1[crlf]Host: mio.tomyvps.website[crlf]Upgrade: Websocket[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": "renxo.juegos.personal.com.ar",
            "port": 80
        },
        "server": {
            "host": "Unpkg.com",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    },
    {
        "name": "🇦🇷PERSONAL 9🇦🇷",
        "description": "",
        "mode": "SSH_DIRECT",
        "tls_version": "TLSv1.2",
        "sorter": 9,
        "status": "ACTIVE",
        "auth": {
            "username": null,
            "password": null,
            "v2ray_uuid": null
        },
        "config_openvpn": null,
        "config_payload": {
            "payload": "GET /cdn-cgi/trace HTTP/1.1[lf]Host: renxo.juegos.personal.com.ar[crlf][crlf][split][crlf]GET- / HTTP/1.1[crlf]Host: mio.tomyvps.website[crlf]Upgrade: Websocket[crlf][crlf]",
            "sni": null
        },
        "config_v2ray": null,
        "dns_server": {
            "dns1": "8.8.8.8",
            "dns2": "8.8.4.4"
        },
        "icon": "https://i.ibb.co/JnPRd2J/qtxbg1-Pk-400x400-modified.png",
        "proxy": {
            "host": null,
            "port": null
        },
        "server": {
            "host": "emailmarketing.personal.com.ar#renxo.juegos.personal.com.ar",
            "port": 80
        },
        "dnstt_key": null,
        "dnstt_name_server": null,
        "dnstt_server": null,
        "udp_ports": [
            7300
        ],
        "url_check_user": "https://59b4d0c62f.dtunnel.shop:2053",
        "category": {
            "name": "🇦🇷ARGENTINA🇦🇷",
            "color": "#00000080",
            "sorter": 1
        }
    }
]
